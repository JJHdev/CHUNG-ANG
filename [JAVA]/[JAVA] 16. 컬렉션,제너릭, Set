# 16. 컬렉션,제너릭, Set

1. 컬렉션프레임워크
2. ArraysList
3. 제너릭
4. 박싱 언박싱.
5. LinkedList
6. System클래스
7. set
8. String
9. Map

## 1. 컬렉션프레임워크.

. List : 순서가 있으며, 중복이 가능하다. (대기자 명단) . Set : 순서없으며, 중복이 불가능하다. (집합관계) . Map : key와 value 가 한 pair로 있다.

   `public static void main (String[] args) {
   	
   	//ArrayList는 List인터페이스의 구현클래스 중의 하나
   	//클래스명 참조변수 = new 클래스명();
   	//ArratList 객체생성.
   	ArrayList list = new ArrayList();
   	
   	//value 추가  .add(object)
   	list.add("피카츄");
   	list.add("이슬이");
   	list.add("웅이");
   	list.add(new String("한지우"));
   	
   	//저장된 value개수 : size() 
   	System.out.println(list.size());
   	
   	//1번value 꺼내기 Object리턴하는  .get(index)
   	System.out.println(list.get(0));
   	Object obj = list.get(1);
   	String strObj=((String)obj);  //String으로 강제형변환
   	int len = strObj.length();   // String으로 변환된 value의 글자길이.
   	System.out.println(strObj+"글자길이="+len);
   	
   	//2번.
   	String strObj2=(String)list.get(3);
   	System.out.println(list.get(3)+"글자길이="+strObj2.length());
   	
   	//3번
   	System.out.println(list.get(2)+"글자길이="+((String)(list.get(2))).length());`

import = ctrl+shift+o

## 2. 제너릭

2-1. 제너릭 타입이란? 타입을 파리미터로 가지는 클래스와 인터페이스 선언 시 클래스 또는 인터페이스 이름 뒤에 <>부호를 붙임 <>사이에는 타입 파라미터 위치

2-2. 타입 파라미터 일반적으로 대문자 알파벳 한 문자로 표현 개발코드에서는 타입 파라미터 자리에 구체적인 타입을 지정해야.

## 3. Set

- 

package cho15_Collection;

import java.util.HashSet; import java.util.Iterator; import java.util.Set;

// ★★★★★ 컬렉션프레임워크의 3가지 인터페이스 종류 & 종류별 특징. //List : 중복가능, 순서대로 (대기자명단) //Set : 중복x , 순서x (집합) //Map : 값과 키가 한쌍으로 있음.
